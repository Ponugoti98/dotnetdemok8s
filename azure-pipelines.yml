# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - develop

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'f262d918-d061-436d-aa43-9ab62dff1cd6'
  imageRepository: 'dotnedemodockerk8'
  containerRegistry: 'bhuvana.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'bhuvana4398fa18-auth'
  vmImageName: 'test'  # The agent name in the "test" agent pool
  system.debug: true

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)  # Use the variable for the agent VM image
    steps:
    - task: Docker@2
      displayName: Build and push an image to the container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

#    - upload: manifests
#      artifact: manifests

#- stage: Deploy
#  displayName: Deploy stage
#  dependsOn: Build

#  jobs:
#  - deployment: Deploy
#    displayName: Deploy
#    pool:
#      vmImage: $(vmImageName)  # Use the variable for the agent VM image
#    environment: 'Ponugoti98dotnetdemok8s-1561.dotnetdemo'
#    strategy:
#      runOnce:
#        deploy:
#          steps:
#          - task: KubernetesManifest@0
#            displayName: Create imagePullSecret
#            inputs:
#              action: createSecret
#              secretName: $(imagePullSecret)
#              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)#
#
#          - task: KubernetesManifest@0
#            displayName: Deploy to the Kubernetes cluster
#            inputs:
#              action: deploy
#              manifests: |
#                $(Pipeline.Workspace)/manifests/deployment.yml
#                $(Pipeline.Workspace)/manifests/service.yml
#              imagePullSecrets: |
#                $(imagePullSecret)
#              containers: |
#                $(containerRegistry)/$(imageRepository):$(tag)


  
